<Page
    x:Class="HackerNewsDaily.Views.HomeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HackerNewsDaily.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:HackerNewsDaily.ViewModels"
    xmlns:cal="using:Caliburn.Micro"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance viewModels:HomeViewModel, IsDesignTimeCreatable=True}"
    cal:Bind.AtDesignTime="True">
    
    <Page.Resources>
        <Style x:Key="CommentButton"  TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderThemeBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
            <Setter Property="Padding" Value="12,4,12,4" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                   Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                   Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                   Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                   Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                   Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                   Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                   Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="15"
                            Margin="3">
                                <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          AutomationProperties.AccessibilityView="Raw"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite"
                               IsHitTestVisible="False"
                               Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="1.5" />
                            <Rectangle x:Name="FocusVisualBlack"
                               IsHitTestVisible="False"
                               Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="0.5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate x:Key="StoryTemplate">
            <Grid cal:Message.Attach="[Event Holding] = [Action OpenMenu($source)]"
                  d:DataContext="{d:DesignInstance Type=viewModels:TopStoryViewModel, IsDesignTimeCreatable=False}"
                  cal:Bind.AtDesignTime="True">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Open Story"
                                        cal:Message.Attach="OpenStory">
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Read Comments"
                                        cal:Message.Attach="ViewComments"/>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>

                <Grid.RowDefinitions>
        			<RowDefinition/>
        			<RowDefinition/>
        		</Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding Title, Mode=OneWay}"
                           TextWrapping="Wrap"
                           Foreground="{StaticResource StoryPanelTextBrush}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Grid.Row="0"
                           Grid.Column="0"/>

                <TextBlock Text="{Binding DisplayInfo, Mode=OneWay}"
                           TextWrapping="Wrap"
                           Foreground="{StaticResource StoryPanelTextBrush}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Grid.Row="1"
                           Grid.Column="0"/>

                <TextBlock Text="{Binding CommentCount}"
                           Grid.Row="0"
                           Grid.RowSpan="2"
                           Grid.Column="1"
                                   Foreground="{StaticResource StoryPanelTextBrush}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{StaticResource StoryPanelBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Background="{StaticResource HeaderBarBackgroundBrush}"
                Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="HNDaily"
                           Foreground="{StaticResource HeaderBarTextBrush}"
                           Margin="4,0,0,0"
                           TextAlignment="Center"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           FontFamily="Segoe WP"
                           FontSize="30"
                           FontWeight="Light"
                           Height="40"
                           Grid.Column="0"/>

                <Rectangle Fill="{StaticResource HeaderBarTextBrush}"
                           Width="20"
                           Height="20"
                           HorizontalAlignment="Right"
                           Grid.Column="1"/>
            </Grid>
            
        </Border>
        <ListView ScrollViewer.VerticalScrollMode="Enabled"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  Grid.Row="1"
                  Padding="4,0,4,0"
                  ItemsSource="{Binding TopStories}"
                  ItemTemplate="{StaticResource StoryTemplate}"
                  VerticalAlignment="Stretch"
                  IsItemClickEnabled="True"
                  cal:Message.Attach="[Event ItemClick] = [Action ViewStory($eventArgs)]"
                  cal:Bind.AtDesignTime="True">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        
        <ProgressRing Grid.Row="1"
                      IsActive="{Binding IsUpdating}"
                      Background="#33000000"
                      Foreground="{StaticResource StoryPanelTextBrush}"
                      Visibility="{Binding IsUpdating, Converter={StaticResource BooleanToVisibility}}"/>
    </Grid>
</Page>
